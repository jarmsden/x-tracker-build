{"version":3,"sources":["firebase.js","FirebaseConfigDev.js","utilities/constants.js","contexts/AuthContexts.js","PrivateRoute.js","components/Login.js","components/UpdateProfile.js","components/PasswordReset.js","components/AddItemModal.js","components/MainMenu.js","components/HeaderMenu.js","components/Footer.js","components/CommentCard.js","components/ViewItemModal.js","components/EditItemModal.js","components/MainTable.js","components/XTracker.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","xtFirestore","firestore","STATUS_OPTIONS","ISSUE_TYPE_OPTIONS","MAIN_TABLE_HEADERS","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","updateEmail","updatePassword","updateDisplayName","name","updateProfile","displayName","passwordReset","sendPasswordResetEmail","xtAddTask","category","estimateHours","issueType","patchVersion","summary","title","startDate","dueDate","collection","add","status","createdDate","FieldValue","serverTimestamp","xtUpdateTask","docId","actualHours","doc","update","xtAddComment","taskId","text","userEmail","userName","addedDate","Provider","PrivateRoute","Component","component","rest","render","props","to","withRouter","history","errorMsg","setErrorMsg","setEmail","pwd","setPwd","e","a","preventDefault","push","message","console","log","Container","className","Form","onSubmit","Alert","variant","Field","type","placeholder","onChange","target","Button","disabled","successMsg","setSuccessMsg","setDisplayName","pwdConf","setPwdConf","length","promises","Promise","all","then","catch","error","defaultValue","onClick","PasswordReset","required","AddItemModal","open","setOpen","Date","setStartDate","setDueDate","setIssueType","setTitle","setPatchVersion","setCategory","setSummary","setEstimateHours","handleSubmit","Modal","onClose","onOpen","trigger","Dropdown","Item","icon","Content","style","justifyContent","fluid","selection","options","statusOptions","forEach","key","getStatusOptions","width","issueTypeOptions","getIssueTypeOptions","data","selected","date","paddingLeft","Actions","color","content","labelPosition","positive","taskListData","Menu","marginRight","item","simple","newData","Status","Title","IssueType","Summary","PatchVersion","Category","EstimateHours","ActualHours","CreatedDate","seconds","toLocaleDateString","StartDate","DueDate","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","Divider","headerMenuProps","handleClick","activeMenuItem","handleOnChange","numOpen","numInProgress","numPending","numResolved","numclosed","pointing","active","Label","position","Input","Footer","Icon","CommentCard","comments","setText","setUserName","Comment","Group","Header","as","dividing","overflowY","height","map","comment","Avatar","src","Author","Metadata","toLocaleString","Text","reply","size","right","top","rows","cols","reuqired","primary","ViewItemModal","modalFields","fbDocumentId","fbIssueType","fbTitle","fbSummary","fbStatus","fbStartDate","fbDueDate","fbEstimateHours","fbActualHours","fbPatchVersion","fbCategory","fbComments","Segment","Grid","columns","Column","readOnly","EditItemModal","setStatus","setActualHours","useStyles","makeStyles","table","minWidth","MainTable","searchData","classes","fixDate","TableContainer","Paper","Table","aria-label","TableHead","TableRow","backgroundColor","header","index","TableCell","align","TableBody","row","index1","toLowerCase","includes","id","substring","XTracker","handleOnClick","setState","search","setTaskNumbers","inProgress","pending","resolved","closed","state","taskList","task","taskNumOpen","taskNumInProgress","taskNumPending","taskNumResolved","taskNumClosed","hasRan","users","onSnapshot","serverUpdate","docs","commentList","this","App","path","Login","exact","UpdateProfile","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08141a64.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { firebaseConfig } from './FirebaseConfigDev';\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = app.auth();\r\nexport const xtFirestore = app.firestore();\r\nexport default app;","export const firebaseConfig =  {\r\n    apiKey: \"AIzaSyDBdSkacNhMzIWwuZpu2WJSfoYhPxAC7F4\",\r\n    authDomain: \"xtracker-dev.firebaseapp.com\",\r\n    databaseURL: \"https://xtracker-dev.firebaseio.com\",\r\n    projectId: \"xtracker-dev\",\r\n    storageBucket: \"xtracker-dev.appspot.com\",\r\n    messagingSenderId: \"1088242282424\",\r\n    appId: \"1:1088242282424:web:2994cce8f3ae934999294d\",\r\n    measurementId: \"G-SH6ET89NFQ\"\r\n}","export const STATUS_OPTIONS = ['Open', 'In Progress', 'Pending', 'Resolved', 'Closed']\r\nexport const ISSUE_TYPE_OPTIONS = ['Alpha', 'Beta', 'Pre-Release', 'Release']\r\nexport const MAIN_TABLE_HEADERS =[\r\n  'Action',\r\n  'Issue Type',\r\n  'Title',\r\n  'Summary',\r\n  'Start Date',\r\n  'Due Date',\r\n  'Estimated Hours',\r\n  'Actual Hours',\r\n  'Created Date'\r\n]\r\nexport const FIRESTORE_TASK_COLLECTION = 'x-tracker-tasks'\r\nexport const FIRESTORE_USER_COLLECTION = 'x-tracker-users'\r\nexport const FIRESTORE_COMMENT_COLLECTION = 'x-tracker-comments'\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth, xtFirestore } from '../firebase';\r\nimport firebase from 'firebase';\r\nimport { FIRESTORE_TASK_COLLECTION, FIRESTORE_COMMENT_COLLECTION } from '../utilities/constants';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    // Functions to run with authenticated user\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    function updateDisplayName(name) {\r\n        return currentUser.updateProfile({\r\n            displayName: name\r\n        })\r\n    } \r\n\r\n    function passwordReset(email){\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function xtAddTask(\r\n        category,\r\n        estimateHours,\r\n        issueType,\r\n        patchVersion,\r\n        summary,\r\n        title,\r\n        startDate,\r\n        dueDate\r\n    ) {\r\n        return xtFirestore\r\n            .collection(FIRESTORE_TASK_COLLECTION)\r\n            .add({\r\n                category: category,\r\n                estimateHours: estimateHours,\r\n                issueType: issueType,\r\n                patchVersion: patchVersion,\r\n                status: 'Open',\r\n                summary: summary,\r\n                title: title,\r\n                startDate: startDate,\r\n                dueDate: dueDate,\r\n                createdDate: firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n    }\r\n    \r\n    function xtAddComment(\r\n        taskId,\r\n        text,\r\n        userEmail,\r\n        userName\r\n    ) {\r\n        return xtFirestore\r\n            .collection(FIRESTORE_COMMENT_COLLECTION)\r\n            .add({\r\n                taskId: taskId,\r\n                text: text,\r\n                userEmail: userEmail,\r\n                userName: userName,\r\n                addedDate: firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n    }\r\n\r\n    function xtUpdateTask(\r\n        docId,\r\n        category,\r\n        estimateHours,\r\n        actualHours,\r\n        issueType,\r\n        patchVersion,\r\n        status,\r\n        summary,\r\n        title,\r\n        startDate,\r\n        dueDate\r\n    ) {\r\n        return xtFirestore\r\n            .collection(FIRESTORE_TASK_COLLECTION)\r\n            .doc(docId)\r\n            .update({\r\n                category: category,\r\n                estimateHours: estimateHours,\r\n                actualHours: actualHours,\r\n                issueType: issueType,\r\n                patchVersion: patchVersion,\r\n                status: status,\r\n                summary: summary,\r\n                title: title,\r\n                startDate: startDate,\r\n                dueDate: dueDate,\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        //Place functions here to use \r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        updateEmail,\r\n        updatePassword,\r\n        updateDisplayName,\r\n        passwordReset,\r\n        xtAddTask,\r\n        xtUpdateTask,\r\n        xtAddComment\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            { !loading && children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useAuth } from './contexts/AuthContexts'\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest}) {\r\n    const { currentUser } = useAuth()\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        >\r\n\r\n        </Route>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useAuth } from 'contexts/AuthContexts';\r\n\r\nfunction Login({ history }) {\r\n    const { login, currentUser } = useAuth();\r\n\r\n    const initialState = '';\r\n    const [errorMsg, setErrorMsg] = useState(initialState)\r\n    const [loading, setLoading] = useState(false)\r\n    const [email, setEmail] = useState(initialState)\r\n    const [pwd, setPwd] = useState(initialState)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setErrorMsg('')\r\n            setLoading(true)\r\n            await login(email, pwd)\r\n            history.push('/')\r\n        } catch (error) {\r\n            setErrorMsg(error.message)\r\n        }\r\n        console.log(currentUser)\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex align-items-center justify-content-center min-vh-100\">\r\n            <div className=\"w-100 div-main\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <h2 className=\"text-center mb-4\">Login</h2>\r\n                    { errorMsg && <Alert variant='danger'>{errorMsg}</Alert>}\r\n                    <Form.Field>\r\n                        <label>Username</label>\r\n                        <input type=\"email\" placeholder='jsmith@gmail.com' onChange={(e) => {setEmail(e.target.value)}} />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Password</label>\r\n                        <input  type=\"password\" onChange={(e) => {setPwd(e.target.value)}} />\r\n                    </Form.Field>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        <Button className=\"w-50\" type='submit' disabled={loading}>Login</Button>\r\n                    </div>\r\n                </Form>\r\n                <div className=\"w-100 text-center mt-2\">\r\n                    <Link to=\"/password-reset\">Forgot password?</Link>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login)","import React, { useState } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useAuth } from 'contexts/AuthContexts';\r\n\r\nfunction UpdateProfile({ history }) {\r\n    const initialState = '';\r\n    const [errorMsg, setErrorMsg] = useState(initialState)\r\n    const [successMsg, setSuccessMsg] = useState(initialState)\r\n    const [displayName, setDisplayName] = useState(initialState)\r\n    const [email, setEmail] = useState(initialState)\r\n    const [pwd, setPwd] = useState(initialState)\r\n    const [pwdConf, setPwdConf] = useState(initialState)\r\n   \r\n    const { updateEmail, updatePassword, updateDisplayName, currentUser } = useAuth();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setErrorMsg('')\r\n        setSuccessMsg('')\r\n\r\n        if(pwd.length < 6) {\r\n            return setErrorMsg('Password length must be greater than 6 characters')\r\n        }\r\n\r\n        if(pwd !== pwdConf){\r\n            return setErrorMsg('Passwords do not match')\r\n        }\r\n\r\n        let promises = []\r\n        if(email !== currentUser.email) {\r\n            promises.push(updateEmail(email))\r\n        }\r\n        if(pwd) {\r\n            promises.push(updatePassword(pwd))\r\n        }\r\n        if(displayName !== currentUser.displayName) {\r\n            promises.push(updateDisplayName(displayName))\r\n        }\r\n\r\n        Promise.all(promises)\r\n            .then(() => {\r\n                setSuccessMsg('Updated Successfully')})\r\n            .catch(error => {\r\n                setErrorMsg(error.message)})\r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex align-items-center justify-content-center min-vh-100\">\r\n            <div className=\"w-100 div-main\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\r\n                    { errorMsg && <Alert variant='danger'>{errorMsg}</Alert>}\r\n                    { successMsg && <Alert variant='success'>{successMsg}</Alert>}\r\n                    <Form.Field>\r\n                        <label>Display Name</label>\r\n                        <input type=\"text\" defaultValue={currentUser.displayName} onChange={(e) => {setDisplayName(e.target.value)}} />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Username</label>\r\n                        <input type=\"email\" defaultValue={currentUser.email} onChange={(e) => {setEmail(e.target.value)}} />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Password</label>\r\n                        <input  type=\"password\" onChange={(e) => {setPwd(e.target.value)}} />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>ConfirmPassword</label>\r\n                        <input  type=\"password\" onChange={(e) => {setPwdConf(e.target.value)}} />\r\n                    </Form.Field>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        <Button className=\"w-50\" type='submit'>Update</Button>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        <Button className=\"w-50\" onClick={() => { history.push('/')}}>Cancel</Button>\r\n                    </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(UpdateProfile)","import React, { useState } from 'react';\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useAuth } from 'contexts/AuthContexts';\r\n\r\nexport default function PasswordReset() {\r\n    const { passwordReset } = useAuth();\r\n    \r\n    const initialState = '';\r\n    const [errorMsg, setErrorMsg] = useState(initialState)\r\n    const [successMsg, setSuccessMsg] = useState(initialState)\r\n    const [loading, setLoading] = useState(false)\r\n    const [email, setEmail] = useState(initialState)\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            setErrorMsg('')\r\n            setSuccessMsg('')\r\n            setLoading(true)\r\n            await passwordReset(email)\r\n            setSuccessMsg('Password reset email sent successfully! Please see email for further instructions.')\r\n        } catch (error) {\r\n            setErrorMsg(error.message)\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex align-items-center justify-content-center min-vh-100\">\r\n            <div className=\"w-100 div-main\">\r\n                <Form onSubmit={handleSubmit}>\r\n                    <h2 className=\"text-center mb-4\">Login</h2>\r\n                    { errorMsg && <Alert variant='danger'>{errorMsg}</Alert>}\r\n                    { successMsg && <Alert variant='success'>{successMsg}</Alert>}\r\n                    <Form.Field>\r\n                        <label>Email</label>\r\n                        <input type=\"email\" placeholder='jsmith@gmail.com' onChange={(e) => {setEmail(e.target.value)}} required/>\r\n                    </Form.Field>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        <Button className=\"w-50\" type='submit' disabled={loading}>Send Email</Button>\r\n                    </div>\r\n                </Form>\r\n                <div className=\"w-100 text-center mt-2\">\r\n                    <Link to=\"/login\">Login</Link>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal, Form, Dropdown } from 'semantic-ui-react';\r\nimport { Container, Alert } from 'react-bootstrap'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { ISSUE_TYPE_OPTIONS, STATUS_OPTIONS } from 'utilities/constants';\r\nimport { useAuth } from 'contexts/AuthContexts';\r\n\r\n\r\nexport default function AddItemModal() {\r\n  const { xtAddTask } = useAuth()\r\n  const initialValue = null\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [dueDate, setDueDate] = useState(new Date())\r\n  const [issueType, setIssueType] = useState(initialValue)\r\n  const [errorMsg, setErrorMsg] = useState(initialValue)\r\n  const [title, setTitle] = useState(initialValue)\r\n  const [patchVersion, setPatchVersion] = useState(initialValue)\r\n  const [category, setCategory] = useState(initialValue)\r\n  const [summary, setSummary] = useState(initialValue)\r\n  const [estimateHours, setEstimateHours] = useState(initialValue)\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setErrorMsg('')\r\n\r\n    try{\r\n      xtAddTask(\r\n        category,\r\n        estimateHours,\r\n        issueType,\r\n        patchVersion,\r\n        summary,\r\n        title,\r\n        startDate,\r\n        dueDate\r\n      )\r\n    } catch (error) {\r\n      setErrorMsg(error)\r\n    }\r\n    \r\n    setOpen(false)\r\n  }\r\n\r\n  function getStatusOptions() {\r\n    let statusOptions = []\r\n    STATUS_OPTIONS.forEach(status => statusOptions.push({key: status, text: status, value: status}))\r\n    return statusOptions\r\n  }\r\n\r\n  function getIssueTypeOptions() {\r\n    let issueTypeOptions = []\r\n    ISSUE_TYPE_OPTIONS.forEach(issueType => issueTypeOptions.push({key: issueType, text: issueType, value: issueType}))\r\n    return issueTypeOptions\r\n}\r\n\r\n  return (\r\n    <Modal\r\n      className='xt-modal'\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Dropdown.Item icon='plus' text='New'></Dropdown.Item>}\r\n    >\r\n      <Container className=\"d-flex align-items-center justify-content-center mt-4 mb-4\">\r\n        <div className='w-100 h-100'>\r\n          <Modal.Content>\r\n            {errorMsg && <Alert variant='danger'>{errorMsg}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n                <div className='xt-add-item-modal-flex' style={{justifyContent: 'space-evenly'}}>\r\n                  <Form.Field>\r\n                    <label>Status</label>\r\n                    <Dropdown\r\n                      fluid\r\n                      selection\r\n                      options={getStatusOptions()}\r\n                      style={{width: '200px'}}\r\n                      value='Open'\r\n                      disabled\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Issue Type</label>\r\n                    <Dropdown\r\n                      fluid\r\n                      selection\r\n                      options={getIssueTypeOptions()}\r\n                      style={{width: '200px'}}\r\n                      onChange={(e, data) => {setIssueType(data.value)}}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Start Date</label>\r\n                    <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Due Date</label>\r\n                    <DatePicker selected={dueDate} onChange={date=> setDueDate(date)} />\r\n                  </Form.Field>\r\n                </div>\r\n                <Form.Field>\r\n                    <label>Title</label>\r\n                    <input type=\"text\" onChange={(e) => {setTitle(e.target.value)}} />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <label>Summary</label>\r\n                    <input type=\"text\" onChange={(e) => {setSummary(e.target.value)}} />\r\n                </Form.Field>\r\n                <div className='xt-add-item-modal-flex' style={{justifyContent: 'left'}}>\r\n                  <Form.Field>\r\n                      <label>Category</label>\r\n                      <input \r\n                        type=\"text\" \r\n                        onChange={(e) => {setCategory(e.target.value)}}\r\n                        style={{width: '200px'}} \r\n                      />\r\n                  </Form.Field>\r\n                  <Form.Field style={{paddingLeft: '20px'}}>\r\n                      <label>Estimated Hours</label>\r\n                      <input \r\n                        type=\"text\" \r\n                        onChange={(e) => {setEstimateHours(e.target.value)}}\r\n                        style={{width: '200px'}}\r\n                      />\r\n                  </Form.Field>\r\n                  <Form.Field style={{paddingLeft: '20px'}}>\r\n                    <label>Patch Version</label>\r\n                    <input \r\n                      placeholder='1.0.0'\r\n                      type=\"text\" \r\n                      onChange={(e) => {setPatchVersion(e.target.value)}}\r\n                      style={{width: '200px'}} \r\n                    />\r\n                  </Form.Field>\r\n                </div>\r\n                <div className=\"w-100 text-center mt-2\">\r\n                </div>\r\n            </Form>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color='red' onClick={() => setOpen(false)}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              content=\"Add Item\"\r\n              labelPosition='right'\r\n              icon='checkmark'\r\n              onClick={handleSubmit}\r\n              positive\r\n            />\r\n          </Modal.Actions>\r\n        </div>\r\n      </Container>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Dropdown, Menu } from 'semantic-ui-react';\r\nimport { ExportToCsv } from 'export-to-csv'; \r\nimport AddItemModal from './AddItemModal';\r\n\r\nfunction MainMenu({logout, history, taskListData }) {\r\n    function handleOnClick() {\r\n        let newData = []\r\n        taskListData.forEach(data => {\r\n            newData.push(\r\n                {\r\n                    Status: data.status,\r\n                    Title: data.title,\r\n                    IssueType: data.issueType,\r\n                    Summary: data.summary,\r\n                    PatchVersion: data.patchVersion,\r\n                    Category: data.category,\r\n                    EstimateHours: data.estimateHours,\r\n                    ActualHours: data.actualHours,\r\n                    CreatedDate: new Date(data.createdDate.seconds * 1000).toLocaleDateString(),\r\n                    StartDate: data.startDate ?  new Date(data.startDate.seconds  * 1000).toLocaleDateString() : '',\r\n                    DueDate: data.dueDate ?  new Date(data.dueDate.seconds  * 1000).toLocaleDateString() : '',\r\n                }\r\n            )\r\n        })\r\n        const options = { \r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true, \r\n            showTitle: true,\r\n            title: new Date().toLocaleDateString(),\r\n            useTextFile: false,\r\n            useBom: true,\r\n            useKeysAsHeaders: true\r\n          };\r\n        const csvExporter = new ExportToCsv(options)\r\n        csvExporter.generateCsv(newData)\r\n    }\r\n\r\n    return (\r\n        <Menu style={{ marginRight: '5px'}}>\r\n            <Dropdown item icon='wrench' simple>\r\n                <Dropdown.Menu>\r\n                <AddItemModal />\r\n                <Dropdown.Item icon='file excel' text='Export' onClick={handleOnClick}></Dropdown.Item>\r\n                {/* <Dropdown.Item icon='user' text='Dashboard' onClick={() => {history.push('/dashboard')}}></Dropdown.Item> */}\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item icon='pen square' text='Edit Profile' onClick={() => {history.push('/update-profile')}}></Dropdown.Item>\r\n                {/* //TODO Create Export feature <Dropdown.Header icon='save' text='Export' onClick={null}></Dropdown.Header> */}\r\n                <Dropdown.Item icon='lock' text='Logout' onClick={logout}></Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default withRouter(MainMenu)","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Menu, Input, Label } from 'semantic-ui-react';\r\nimport MainMenu from './MainMenu';\r\n// import QuickAdd from './QuickAdd'; // Used for testing\r\nimport { useAuth } from 'contexts/AuthContexts';\r\nimport { STATUS_OPTIONS } from 'utilities/constants'; \r\n\r\nfunction HeaderMenu({headerMenuProps, taskListData}) {\r\n    const { logout } = useAuth(); \r\n    const { handleClick, activeMenuItem, handleOnChange, numOpen, numInProgress, numPending, numResolved, numclosed } = headerMenuProps;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Menu pointing>\r\n                <Menu.Item\r\n                    name={STATUS_OPTIONS[0]}\r\n                    active={activeMenuItem === STATUS_OPTIONS[0]}\r\n                    onClick={handleClick}\r\n                >\r\n                    Open\r\n                    <Label color='red'>{numOpen}</Label>\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                    name={STATUS_OPTIONS[1]}\r\n                    active={activeMenuItem === STATUS_OPTIONS[1]}\r\n                    onClick={handleClick}\r\n                >\r\n                    In Progress\r\n                    <Label color='blue'>{numInProgress}</Label>\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                    name={STATUS_OPTIONS[2]}\r\n                    active={activeMenuItem === STATUS_OPTIONS[2]}\r\n                    onClick={handleClick}\r\n                >\r\n                    Pending\r\n                    <Label color='yellow'>{numPending}</Label>\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                    name={STATUS_OPTIONS[3]}\r\n                    active={activeMenuItem === STATUS_OPTIONS[3]}\r\n                    onClick={handleClick}\r\n                >\r\n                    Resolved\r\n                    <Label color='green'>{numResolved}</Label>\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                    name={STATUS_OPTIONS[4]}\r\n                    active={activeMenuItem === STATUS_OPTIONS[4]}\r\n                    onClick={handleClick}\r\n                >\r\n                    Closed\r\n                    <Label color='grey'>{numclosed}</Label>\r\n                </Menu.Item>\r\n                <Menu.Menu position='right'>\r\n                    { /* <QuickAdd /> // Use for testing */}\r\n                    <Menu.Item>\r\n                        <Input icon='search' placeholder='Search...' onChange={handleOnChange}/>\r\n                    </Menu.Item>\r\n                    <MainMenu \r\n                        logout={logout}\r\n                        taskListData={taskListData}\r\n                    />\r\n                </Menu.Menu>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(HeaderMenu)","import React from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div>\r\n            Jonathan Armsden&nbsp;&nbsp;<Icon name=\"copyright\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Comment, Form, Header, Icon } from 'semantic-ui-react';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { useAuth } from 'contexts/AuthContexts';\r\n\r\nexport default function CommentCard({ comments, docId, status }) {\r\n    const { currentUser, xtAddComment } = useAuth()\r\n    const initialValue = null\r\n    const [text, setText] = useState(initialValue)\r\n    const [userName, setUserName] = useState(initialValue)\r\n\r\n    function handleOnClick(e) {\r\n        e.preventDefault()\r\n\r\n        if(text === '' ) {\r\n            return null\r\n        }\r\n\r\n        if(userName === '' ) {\r\n            return null\r\n        }\r\n\r\n        try{\r\n            xtAddComment(\r\n                docId,\r\n                text,\r\n                currentUser.email,\r\n                currentUser.name ? currentUser.name : userName\r\n            )\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Comment.Group>\r\n            <Header as='h3' dividing>\r\n                Comments\r\n            </Header>\r\n\r\n            <div style={{ overflowY: 'auto', height: '250px'}}>\r\n                {comments.map(comment => {\r\n                    console.log('TaskID: ', comment.taskId)\r\n                    if(docId === comment.taskId) {\r\n                        return (\r\n                            <Comment>\r\n                                <Comment.Avatar src='https://icon-library.com/images/generic-person-icon/generic-person-icon-9.jpg' />\r\n                                <Comment.Content>\r\n                                    <Comment.Author as='a'>Name: {comment.userName} </Comment.Author>\r\n                                    <br />\r\n                                    <Comment.Metadata>\r\n                                        <div>{comment.userEmail} {comment.addedDate ? new Date(comment.addedDate.seconds * 1000).toLocaleString : null}</div>\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text>{comment.text}</Comment.Text>\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        )\r\n                    } else {\r\n                        return null\r\n                    }\r\n                })}\r\n            </div>\r\n\r\n            {\r\n                status === 'Closed' ?\r\n                    null :\r\n                    <Form reply>\r\n                        <Form.Field>\r\n                            {currentUser.name && <input value={currentUser.name} style={{ width: '350px' }}/>}\r\n                            {!currentUser.name && \r\n                                <Alert variant='warning' style={{ width: '380px'}}>\r\n                                    <input \r\n                                        placeholder='Update username in Profile...' \r\n                                        onChange={(e) => {setUserName(e.target.value)}}\r\n                                        required \r\n                                        style={{ width: '300px'}}\r\n                                    />\r\n                                    <Icon name='warning sign' size='large' style={{ position: 'absolute', right: '15px', top: '20px'}} />\r\n                                </Alert>\r\n                            }\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            {/* <input placeholder='Submit updates here...' ref={textRef} onChange={handleOnChange} style={{height: '200px'}}/>  */}\r\n                            <textarea \r\n                                onChange={(e) => {setText(e.target.value)}}\r\n                                placeholder='Type updates here...' \r\n                                rows='5' \r\n                                cols='50'\r\n                                reuqired\r\n                            /> \r\n                        </Form.Field>\r\n                        <Button content='Add Reply' labelPosition='left' icon='edit' primary onClick={handleOnClick} />\r\n                    </Form>\r\n            }\r\n        </Comment.Group>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, Form, Dropdown, Icon, Segment, Grid } from 'semantic-ui-react';\r\nimport { Alert, Container } from 'react-bootstrap'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { STATUS_OPTIONS, ISSUE_TYPE_OPTIONS } from 'utilities/constants';\r\nimport CommentCard from './CommentCard';\r\n\r\nexport default function ViewItemModal({ modalFields }) {\r\n    const [open, setOpen] = useState(false)\r\n    const { \r\n        fbDocumentId,\r\n        fbIssueType, \r\n        fbTitle, \r\n        fbSummary, \r\n        fbStatus, \r\n        fbStartDate,\r\n        fbDueDate, \r\n        fbEstimateHours, \r\n        fbActualHours, \r\n        fbPatchVersion,\r\n        fbCategory,\r\n        fbComments\r\n    } = modalFields;\r\n\r\n    function getStatusOptions() {\r\n        let statusOptions = []\r\n        STATUS_OPTIONS.forEach(status => statusOptions.push({key: status, text: status, value: status}))\r\n        return statusOptions\r\n    }\r\n\r\n    function getIssueTypeOptions() {\r\n        let issueTypeOptions = []\r\n        ISSUE_TYPE_OPTIONS.forEach(issueType => issueTypeOptions.push({key: issueType, text: issueType, value: issueType}))\r\n        return issueTypeOptions\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        className='xt-modal'\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={<Button primary size='tiny'>View</Button>}\r\n        style={{width: '1400px'}}\r\n        >\r\n            <Segment>\r\n                <Grid columns={2}>\r\n                    <Grid.Column>\r\n                        <Container className=\"d-flex align-items-center justify-content-center mt-4\">\r\n                            <div style={{ width: '700px'}}>\r\n                                <Modal.Content>\r\n                                    <Form>\r\n                                        <div className='xt-add-item-modal-flex' style={{justifyContent: 'space-evenly'}}>\r\n                                        <Form.Field>\r\n                                            <label>Status</label>\r\n                                            <Dropdown\r\n                                            fluid\r\n                                            selection\r\n                                            options={getStatusOptions()}\r\n                                            style={{width: '200px'}}\r\n                                            value={fbStatus}\r\n                                            disabled\r\n                                            />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Issue Type</label>\r\n                                            <Dropdown\r\n                                            fluid\r\n                                            selection\r\n                                            options={getIssueTypeOptions()}\r\n                                            style={{width: '200px'}}\r\n                                            value={fbIssueType}\r\n                                            disabled\r\n                                            />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Start Date</label>\r\n                                            <DatePicker selected={fbStartDate} readOnly />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Due Date</label>\r\n                                            <DatePicker selected={fbDueDate} readOnly/>\r\n                                        </Form.Field>\r\n                                        </div>\r\n                                        <Form.Field>\r\n                                            <label>Title</label>\r\n                                            <input type=\"text\" value={fbTitle} readOnly='true' />\r\n                                        </Form.Field>\r\n                                        <Form.Field>\r\n                                            <label>Summary</label>\r\n                                            <input type=\"text\" value={fbSummary} readOnly='true' />\r\n                                        </Form.Field>\r\n                                        <div className='xt-add-item-modal-flex' style={{justifyContent: 'left'}}>\r\n                                        <Form.Field>\r\n                                            <label>Category</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                style={{width: '175px'}}\r\n                                                value={fbCategory}\r\n                                                readOnly\r\n                                            />\r\n                                        </Form.Field>\r\n                                        <Form.Field style={{paddingLeft: '20px'}}>\r\n                                            <label>Estimated Hours</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                style={{width: '100px'}}\r\n                                                value={fbEstimateHours}\r\n                                                readOnly\r\n                                            />\r\n                                        </Form.Field>\r\n                                        <Form.Field style={{paddingLeft: '20px'}}>\r\n                                            <label>Actual Hours</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                style={{width: '100px'}}\r\n                                                value={fbActualHours}\r\n                                                readOnly\r\n                                            />\r\n                                        </Form.Field>\r\n                                        <Form.Field style={{paddingLeft: '20px'}}>\r\n                                            <label>Patch Version</label>\r\n                                            <input \r\n                                            placeholder='1.0.0'\r\n                                            type=\"text\" \r\n                                            style={{width: '200px'}}\r\n                                            value={fbPatchVersion}\r\n                                            readOnly\r\n                                            />\r\n                                        </Form.Field>\r\n                                        </div>\r\n                                        <div className=\"w-100 text-center mt-2\">\r\n                                        </div>\r\n                                    </Form>\r\n                                </Modal.Content>\r\n                                <br />\r\n                                <div className='text-center'>\r\n                                    <Alert variant='danger'><Icon name='warning sign' />Closed tasks cannot be modified<Icon name='warning sign' /></Alert>\r\n                                </div>\r\n                            </div>\r\n                        </Container>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <CommentCard \r\n                        docId={fbDocumentId}\r\n                        comments={fbComments}\r\n                        status={fbStatus}\r\n                        />\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal, Form, Dropdown, Segment, Grid } from 'semantic-ui-react';\r\nimport { Alert, Container } from 'react-bootstrap'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { STATUS_OPTIONS, ISSUE_TYPE_OPTIONS } from 'utilities/constants';\r\nimport { useAuth } from 'contexts/AuthContexts';\r\nimport CommentCard from './CommentCard';\r\n\r\n\r\nexport default function EditItemModal({ modalFields }) {\r\n  const { \r\n    fbDocumentId,\r\n    fbIssueType, \r\n    fbTitle, \r\n    fbSummary, \r\n    fbStatus, \r\n    fbStartDate,\r\n    fbDueDate, \r\n    fbEstimateHours, \r\n    fbActualHours, \r\n    fbPatchVersion,\r\n    fbCategory,\r\n    fbComments\r\n} = modalFields;\r\n\r\n  const initialValue = null;\r\n  const { xtUpdateTask } = useAuth()\r\n  const [open, setOpen] = useState(false)\r\n  const [errorMsg, setErrorMsg] = useState(initialValue)\r\n  const [issueType, setIssueType] = useState(fbIssueType)\r\n  const [status, setStatus] = useState(fbStatus)\r\n  const [startDate, setStartDate] = useState(fbStartDate)\r\n  const [dueDate, setDueDate] = useState(fbDueDate)\r\n  const [title, setTitle] = useState(fbTitle)\r\n  const [patchVersion, setPatchVersion] = useState(fbPatchVersion)\r\n  const [category, setCategory] = useState(fbCategory)\r\n  const [summary, setSummary] = useState(fbSummary)\r\n  const [estimateHours, setEstimateHours] = useState(fbEstimateHours)\r\n  const [actualHours, setActualHours] = useState(fbActualHours)\r\n\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setErrorMsg('')\r\n\r\n    try {\r\n      xtUpdateTask(\r\n        fbDocumentId,\r\n        category,\r\n        estimateHours,\r\n        actualHours,\r\n        issueType,\r\n        patchVersion,\r\n        status,\r\n        summary,\r\n        title,\r\n        startDate,\r\n        dueDate\r\n      )\r\n    } catch (error) {\r\n      setErrorMsg(error)\r\n    }\r\n    setOpen(false)\r\n  }\r\n\r\n  function getStatusOptions() {\r\n    let statusOptions = []\r\n    STATUS_OPTIONS.forEach(status => statusOptions.push({key: status, text: status, value: status}))\r\n    return statusOptions\r\n  }\r\n\r\n  function getIssueTypeOptions() {\r\n    let issueTypeOptions = []\r\n    ISSUE_TYPE_OPTIONS.forEach(issueType => issueTypeOptions.push({key: issueType, text: issueType, value: issueType}))\r\n    return issueTypeOptions\r\n}\r\n\r\n  return (\r\n    <Modal\r\n      className='xt-modal'\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Button primary size='tiny'>Edit</Button>}\r\n      style={{width: '1400px'}}\r\n    >\r\n      <Segment>\r\n        <Grid columns={2}>\r\n          <Grid.Column>\r\n            <Container className=\"d-flex align-items-center justify-content-center mt-4\">\r\n              <div style={{ width: '700px'}}>\r\n                <Modal.Content>\r\n                  {errorMsg && <Alert variant='danger'>{errorMsg}</Alert>}\r\n                  <Form onSubmit={handleSubmit}>\r\n                      <div className='xt-add-item-modal-flex' style={{justifyContent: 'space-evenly'}}>\r\n                        <Form.Field>\r\n                          <label>Status</label>\r\n                          <Dropdown\r\n                            fluid\r\n                            selection\r\n                            options={getStatusOptions()}\r\n                            style={{width: '200px'}}\r\n                            onChange={(e, data) => {setStatus(data.value)}}\r\n                            defaultValue={fbStatus}\r\n                          />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Issue Type</label>\r\n                          <Dropdown\r\n                            fluid\r\n                            selection\r\n                            options={getIssueTypeOptions()}\r\n                            style={{width: '200px'}}\r\n                            onChange={(e, data) => {setIssueType(data.value)}}\r\n                            defaultValue={fbIssueType}\r\n                          />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Start Date</label>\r\n                          <DatePicker selected={fbStartDate} onChange={date => setStartDate(date)} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Due Date</label>\r\n                          <DatePicker selected={fbDueDate} onChange={date=> setDueDate(date)} />\r\n                        </Form.Field>\r\n                      </div>\r\n                      <Form.Field>\r\n                          <label>Title</label>\r\n                          <input type=\"text\" onChange={(e) => {setTitle(e.target.value)}} defaultValue={fbTitle}/>\r\n                      </Form.Field>\r\n                      <Form.Field>\r\n                          <label>Summary</label>\r\n                          <input type=\"text\" onChange={(e) => {setSummary(e.target.value)}} defaultValue={fbSummary}/>\r\n                      </Form.Field>\r\n                      <div className='xt-add-item-modal-flex' style={{justifyContent: 'left'}}>\r\n                        <Form.Field>\r\n                            <label>Category</label>\r\n                            <input \r\n                              type=\"text\" \r\n                              onChange={(e) => {setCategory(e.target.value)}}\r\n                              style={{width: '175px'}}\r\n                              defaultValue={fbCategory}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field style={{paddingLeft: '20px'}}>\r\n                            <label>Estimated Hours</label>\r\n                            <input \r\n                              type=\"text\" \r\n                              onChange={(e) => {setEstimateHours(e.target.value)}}\r\n                              style={{width: '100px'}}\r\n                              value={fbEstimateHours}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field style={{paddingLeft: '20px'}}>\r\n                            <label>Actual Hours</label>\r\n                            <input \r\n                              type=\"text\" \r\n                              onChange={(e) => {setActualHours(e.target.value)}}\r\n                              style={{width: '100px'}}\r\n                              defaultValue={fbActualHours}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field style={{paddingLeft: '20px'}}>\r\n                          <label>Patch Version</label>\r\n                          <input \r\n                            placeholder='1.0.0'\r\n                            type=\"text\" \r\n                            onChange={(e) => {setPatchVersion(e.target.value)}}\r\n                            style={{width: '200px'}}\r\n                            defaultValue={fbPatchVersion}\r\n                          />\r\n                        </Form.Field>\r\n                      </div>\r\n                      <div className=\"w-100 text-center mt-2\">\r\n                      </div>\r\n                  </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                  <Button color='red' onClick={() => setOpen(false)}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    content=\"Update Item\"\r\n                    onClick={handleSubmit}\r\n                    positive\r\n                  />\r\n                </Modal.Actions>\r\n              </div>\r\n            </Container>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <CommentCard \r\n              docId={fbDocumentId}\r\n              comments={fbComments}\r\n            />\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ViewItemModal from './ViewItemModal';\r\nimport EditItemModal from './EditItemModal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { MAIN_TABLE_HEADERS } from 'utilities/constants';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function MainTable({ taskListData, activeMenuItem, searchData, comments }) {\r\n    const classes = useStyles();\r\n\r\n    function fixDate(seconds) {\r\n        if(seconds) {\r\n            return new Date(seconds * 1000).toLocaleDateString()\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n    \r\n    if(taskListData) {\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow style={{backgroundColor: \"lightgray\"}}>\r\n                        {MAIN_TABLE_HEADERS.map((header, index) => {\r\n                            return <TableCell key={index} align=\"center\">{header}</TableCell>\r\n                        })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {taskListData.map((row, index1) => {\r\n                            if(\r\n                                (activeMenuItem === row.status && row.title.toLowerCase().includes(searchData)) || \r\n                                (activeMenuItem === row.status && row.summary.toLowerCase().includes(searchData))) {\r\n                                    const modalFields = {\r\n                                        fbDocumentId: row.id, \r\n                                        fbIssueType: row.issueType,\r\n                                        fbTitle: row.title,\r\n                                        fbSummary: row.summary,\r\n                                        fbStatus: row.status,\r\n                                        fbStartDate: row.startDate ? new Date(row.startDate.seconds * 1000) : null,\r\n                                        fbDueDate: row.dueDate ? new Date(row.dueDate.seconds * 1000) : null,\r\n                                        fbEstimateHours: row.estimateHours,\r\n                                        fbActualHours: row.actualHours,\r\n                                        fbPatchVersion: row.patchVersion,\r\n                                        fbCategory: row.category,\r\n                                        fbComments: comments\r\n                                    }\r\n                                    return(\r\n                                        <TableRow key={index1}>\r\n                                            <TableCell align=\"center\">\r\n                                                {row.status === 'Closed' ?\r\n                                                    <ViewItemModal\r\n                                                        modalFields={modalFields}\r\n                                                    /> :\r\n                                                    <EditItemModal\r\n                                                        modalFields={modalFields}\r\n                                                />\r\n                                            }\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">{row.issueType}</TableCell>\r\n                                            <TableCell align=\"center\">{row.title.substring(0,30)}</TableCell>\r\n                                            <TableCell align=\"center\">{row.summary.substring(0,30) + '...'}</TableCell>\r\n                                            <TableCell align=\"center\">{row.startDate ? fixDate(row.startDate.seconds) : null}</TableCell>\r\n                                            <TableCell align=\"center\">{row.dueDate ? fixDate(row.dueDate.seconds) : null}</TableCell>\r\n                                            <TableCell align=\"center\">{row.estimateHours}</TableCell>\r\n                                            <TableCell align=\"center\">{row.actualHours}</TableCell>\r\n                                            <TableCell align=\"center\">{row.createdDate ? fixDate(row.createdDate.seconds) : null}</TableCell>\r\n                                        </TableRow>\r\n                                    ) \r\n                            } else {\r\n                                return (null)\r\n                            }\r\n                            \r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    } else {\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow style={{backgroundColor: \"lightgray\"}}>\r\n                        {MAIN_TABLE_HEADERS.map((header, index) => {\r\n                            return <TableCell key={index} align=\"center\">{header}</TableCell>\r\n                        })}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { xtFirestore } from '../firebase';\r\nimport 'css/xtracker.css';\r\nimport HeaderMenu from './HeaderMenu';\r\nimport Footer from './Footer';\r\nimport MainTable from './MainTable';\r\nimport { FIRESTORE_TASK_COLLECTION, FIRESTORE_COMMENT_COLLECTION } from 'utilities/constants';\r\n\r\nclass XTracker extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            taskList: null,\r\n            users: null,\r\n            comments: null,\r\n            activeMenuItem: 'Open',\r\n            search: '',\r\n            taskNumOpen: 0,\r\n            taskNumInProgress: 0,\r\n            taskNumPending: 0,\r\n            taskNumResolved: 0,\r\n            taskNumClosed: 0,\r\n            hasRan: false\r\n        }\r\n    }\r\n\r\n    handleOnClick = (e, {name}) => {\r\n        this.setState({ activeMenuItem: name })\r\n    }\r\n\r\n    handleOnChange = (e) => {\r\n        this.setState({ search: e.target.value.toLowerCase()})\r\n    }\r\n\r\n    componentDidMount() {\r\n        xtFirestore\r\n            .collection(FIRESTORE_TASK_COLLECTION)\r\n            .onSnapshot(serverUpdate => {\r\n                const taskList = serverUpdate.docs.map(task => {\r\n                    const data = task.data();\r\n                    data['id'] = task.id;\r\n                    return data;\r\n                })\r\n                this.setState({ taskList: taskList })\r\n            })\r\n            // TODO Add additional user information - Later feature\r\n            // xtFirestore\r\n            // .collection(FIRESTORE_USER_COLLECTION)\r\n            // .onSnapshot(serverUpdate => {\r\n            //     const userList = serverUpdate.docs.map(user => {\r\n            //         const data = user.data();\r\n            //         data['id'] = user.id;\r\n            //         return data;\r\n            //     })\r\n            //     this.setState({ users: userList })\r\n            // })\r\n            xtFirestore\r\n            .collection(FIRESTORE_COMMENT_COLLECTION)\r\n            .onSnapshot(serverUpdate => {\r\n                const commentList = serverUpdate.docs.map(comment => {\r\n                    const data = comment.data();\r\n                    data['id'] = comment.id;\r\n                    return data;\r\n                })\r\n                this.setState({ comments: commentList })\r\n            })\r\n    }\r\n\r\n    setTaskNumbers = () => {\r\n        var open = 0\r\n        var inProgress = 0\r\n        var pending= 0\r\n        var resolved = 0\r\n        var closed = 0\r\n        this.state.taskList.map(task => {\r\n            switch(task.status) {\r\n                case 'Open':\r\n                   open++;\r\n                   break;\r\n                case 'In Progress':\r\n                   inProgress++;\r\n                   break;\r\n                case 'Pending':\r\n                   pending++;\r\n                   break;\r\n                case 'Resolved':\r\n                   resolved++;\r\n                   break;\r\n                case 'Closed':\r\n                   closed++;\r\n                   break;\r\n                default:\r\n                    break;\r\n            }\r\n            return false\r\n        })\r\n        this.setState({ \r\n            taskNumOpen: open,\r\n            taskNumInProgress: inProgress,\r\n            taskNumPending: pending,\r\n            taskNumResolved: resolved,\r\n            taskNumClosed: closed\r\n        })\r\n        this.setState({ hasRan: true })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.taskList && this.state.hasRan === false) {\r\n           this.setTaskNumbers()\r\n        }\r\n        const headerMenuProps = {\r\n            activeMenuItem: this.state.activeMenuItem,\r\n            handleClick: this.handleOnClick,\r\n            handleOnChange: this.handleOnChange,\r\n            numOpen: this.state.taskNumOpen,\r\n            numInProgress: this.state.taskNumInProgress,\r\n            numPending: this.state.taskNumPending,\r\n            numResolved: this.state.taskNumResolved,\r\n            numclosed: this.state.taskNumClosed\r\n        }\r\n        console.log(this.state.taskList)\r\n\r\n        return (\r\n            <div className=\"xt-main-container\">\r\n                <header className=\"xt-top\">\r\n                    <section className=\"xt-grid-header\">\r\n                        <div>\r\n                            X-TRACKER\r\n                        </div>\r\n                    </section>\r\n                    <section className=\"xt-grid-header-menu\">\r\n                        <HeaderMenu \r\n                            headerMenuProps={headerMenuProps}\r\n                            taskListData={this.state.taskList}\r\n                        />\r\n                    </section>\r\n                </header>\r\n                <aside className=\"xt-grid-main xt-table-view\">\r\n                    <MainTable \r\n                        taskListData={this.state.taskList}\r\n                        activeMenuItem={this.state.activeMenuItem}\r\n                        searchData={this.state.search}\r\n                        comments={this.state.comments}\r\n                    />\r\n                </aside>\r\n                <footer className=\"xt-grid-footer\">\r\n                    <Footer />\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(XTracker)","import React, { Component } from 'react'\nimport { AuthProvider } from './contexts/AuthContexts';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\nimport Login from './components/Login';\n// import Dashboard from './components/Dashboard';\nimport UpdateProfile from './components/UpdateProfile';\nimport PasswordReset from './components/PasswordReset';\nimport XTracker from './components/XTracker';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <AuthProvider>\n          <Switch>\n            {/* Routes */}\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/password-reset\" component={PasswordReset} />\n            {/* Private Routes */}\n            <PrivateRoute exact path=\"/\" component={XTracker} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            {/* <PrivateRoute path=\"/dashboard\" component={Dashboard} /> */}\n            \n          </Switch>\n      </AuthProvider>\n      </Router>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}